#!/bin/bash
# vim:ft=sh

# Enable tracing
# set -x


# Allow __git_ps1 to work on arch linux
[[ -f /usr/share/git/git-prompt.sh ]] && . /usr/share/git/git-prompt.sh

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1

get_ps1() {
    local blue="\[\033[01;34m\]"
    local white="\[\033[01;00m\]"
    local magenta="\[\033[01;35m\]"
    local pink="\[\033[01;31m\]"
    local green="\[\033[01;32m\]"

    local hostname_number=$(hostname | od | tr ' ' '\n' | awk '{total = total + $1}END{print 30 + (total % 6)}')
    local hostname_color="\[\033[01;${hostname_number}m\]"
    local user="${blue}\u${white}"
    local host="${hostname_color}\h${white}"
    local dir="${green}\w${white}"
    local time="${green}\$(date \"+%H:%M:%S\")${white}"

    local git="${green}\$(__git_ps1 '%s')${white}"

    echo "${user}@${host} ${dir} ${git}\n${time} $ "
}

PS1="$(get_ps1)"

# I love history, give me unlimited amounts of it
export HISTSIZE=""
export HISTFILESIZE=""
# Allows for sharing of history across tmux session (-a appends to history)
export PROMPT_COMMAND='history -a'
# Ignore and erase duplicates and commands with leading whitespace
export HISTCONTROL=ignoreboth:erasedups

export EDITOR=vim

# ipython needs these two
export PAGER=less
export less=-r

# Platform dependant stuff
if [[ "$(uname)" == 'Linux' ]]; then
    . ~/.bash_linux
elif [[ "$(uname)" == 'Darwin' ]]; then
    . ~/.bash_mac
fi

export PATH="$HOME/bin:$HOME/go/bin:$PATH"

[[ -f ~/me/bash_secret ]] && . ~/me/bash_secret
[[ -f ~/.aliases ]] && . ~/.aliases
[[ -f ~/.distraction ]] && . ~/.distraction

if [ -f "/workspace/google-cloud-sdk/path.bash.inc" ]; then source '/home/philipforget/workspace/google-cloud-sdk/path.bash.inc'; fi
if [ -f '/usr/lib/google-cloud-sdk/completion.bash.inc' ]; then source '/usr/lib/google-cloud-sdk/completion.bash.inc'; fi
# command kubectl &> /dev/null && source <(kubectl completion bash)

export PYTHONDONTWRITEBYTECODE=1
# Activate the default virtualenv if one isn't activated already
default_venv="${HOME}/.virtualenvs/default"
if [[ -z ${VIRTUAL_ENV} ]] && [[ -d ${default_venv} ]]; then
    export VIRTUAL_ENV_DISABLE_PROMPT=1
    source ${default_venv}/bin/activate
fi
