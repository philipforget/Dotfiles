#!/bin/bash
# vim:ft=sh


function ctor() {
    # Copy all ~/Download/*.torrent files to local or remote watch folder
    if ! [[ $(find ~/Downloads/ -name '*.torrent' | wc -l) = 0 ]]; then
        if [[ -d "/mnt/media/torrents/watch" ]]; then
            mv ~/Downloads/*.torrent /mnt/media/torrents/watch;
        else
            rsync -avhP --no-group ~/Downloads/*.torrent derp.home:/mnt/media/torrents/watch && rm ~/Downloads/*.torrent
        fi
    else
        echo "No torrent files to copy"
    fi
}


# Creds stuff
alias credd='openssl aes-256-cbc -md sha256 -d -a -in creds -out creds.txt'
alias crede='openssl aes-256-cbc -md sha256 -a -salt -in creds.txt -out creds'
alias psa=pss
function pss () {
    openssl aes-256-cbc -md sha256 -d -a -in "$([[ -f creds ]] && echo creds || echo ~/me/creds)" | grep -i -C 6 "${1}"
}

# Concat all ssh configs into one master config
alias sshconfig='> ~/.ssh/config && for f in ~/.ssh/configs/*; do echo "# generated from $f" >> ~/.ssh/config && grep -hv ^# $f >> ~/.ssh/config; done'


# Docker stuff
# Remove all stopped containers
alias drm='docker rm $(docker ps -a -q)'

alias lower="tr '[:upper:]' '[:lower:]'"
alias upper="tr '[:lower:]' '[:upper:]'"

function latest () {
    ls -lth | head -n ${1:-10}
}

alias cleanbranches="git branch --merged | grep -v '^\\*' | xargs git branch -d"
function squash() {
    git rebase --interactive $(git merge-base master $(git branch | grep \* | cut -d ' ' -f 2))
}

alias ivlc="cvlc -I ncurses"


# Tmux session helper. t <session> will either attach to the named session or start a new named session.
function t() {
    case $1 in
        "" )
            tmux ls
            ;;
        *)
            tmux new-session -s "${1}" || tmux attach -t "${1}"
            ;;
    esac
}
[[ -f ~/workspace/dotfiles/tcomplete.bash ]] && . ~/workspace/dotfiles/tcomplete.bash

alias whatismyip="curl httpbin.org/ip 2> /dev/null | jq -r .origin"

function notify() {
    osascript -e 'display notification "'"$1"'"' &>/dev/null
}

function tea () {
    time=${1:-240}
    echo "Notification scheduled in $time seconds"
    nohup sh -c 'sleep '" $time && osascript -e 'display notification "'"Your tea is ready!"'" with title "'"Tea Time"'"'" &>/dev/null &
}

alias coffee="tea 300"

alias rcp="rsync -avhP --no-group"

alias todo='vim ~/todo'
alias standup='vim ~/notes/envelope/standup'

alias hockey='~/.virtualenvs/hockeybox/bin/python -m hockeybox.core'

function fsffplay() {
    size=$(xrandr -q | grep \*\+ | awk '{print $1}') && \
    ffplay -fs \
        -x "$(echo $size | cut -d x -f 1)" \
        -y "$(echo $size | cut -d x -f 2)" \
    $1
}

function gcredentials() {
    default_cluster=main
    cluster=${1:-$default_cluster}
    gcloud container clusters get-credentials "${cluster}"
}

function singlepod () {
    kubectl get pods -o=jsonpath='{.items[0].metadata.name}' "${@}"
}
